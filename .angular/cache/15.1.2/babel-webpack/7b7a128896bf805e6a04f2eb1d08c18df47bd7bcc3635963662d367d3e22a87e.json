{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MoviesService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'https://localhost:44335/movies';\n  }\n  getAll(page, pageSize) {\n    return this.http.get(this.url + '?page=' + page.toString() + '&pageSize=' + pageSize.toString(), F);\n  }\n  getTopRated() {\n    return this.http.get(this.url + '/topRated');\n  }\n  getById(id) {\n    return this.http.get(this.url + '/' + id);\n  }\n}\nMoviesService.ɵfac = function MoviesService_Factory(t) {\n  return new (t || MoviesService)(i0.ɵɵinject(i1.HttpClient));\n};\nMoviesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MoviesService,\n  factory: MoviesService.ɵfac\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,QAAG,GAAG,gCAAgC;EACE;EAExCC,MAAM,CAACC,IAAY,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAU,IAAI,CAACC,GAAG,GAAC,QAAQ,GAACH,IAAI,CAACI,QAAQ,EAAE,GAAC,YAAY,GAACH,QAAQ,CAACG,QAAQ,EAAE,GAAC,CAAC;EACpG;EAEAC,WAAW;IACT,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAU,IAAI,CAACC,GAAG,GAAG,WAAW,CAAC;EACvD;EAEAG,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACT,IAAI,CAACI,GAAG,CAAQ,IAAI,CAACC,GAAG,GAAG,GAAG,GAAGI,EAAE,CAAC;EAClD;;AAdWX,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAY,SAAbZ,aAAa;AAAA","names":["MoviesService","constructor","http","getAll","page","pageSize","get","url","toString","getTopRated","getById","id","factory"],"sourceRoot":"","sources":["C:\\Users\\anoth\\source\\repos\\Orange.Ui\\Orange.Ui\\src\\app\\services\\movies.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Movie } from '../models/movie.model';\r\n\r\n@Injectable()\r\nexport class MoviesService {\r\n  url = 'https://localhost:44335/movies';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(page: number, pageSize: number): Observable<Movie[]> {\r\n    return this.http.get<Movie[]>(this.url+'?page='+page.toString()+'&pageSize='+pageSize.toString()F);\r\n  }\r\n\r\n  getTopRated(): Observable<Movie[]> {\r\n    return this.http.get<Movie[]>(this.url + '/topRated');\r\n  }\r\n\r\n  getById(id: string): Observable<Movie> {\r\n    return this.http.get<Movie>(this.url + '/' + id);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}